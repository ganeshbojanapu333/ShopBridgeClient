@using ShopBridgeClient.Models;
@model IEnumerable<ProductViewModel>;




<section id="PageContent">
    <section id="Filter_Section">
        <div class="container-fluid">
            <form method="post" id="ProductsForm" novalidate
                  data-ajax="true" data-ajax-method="POST"
                  data-ajax-url="ProductClientController/GetProductsList"
                  data-ajax-success="OnSuccess" class="login100-form validate-form">
                <div class="row wow fadeInUp" style="visibility: visible; animation-name: fadeInUp;">
                    <div class="col-lg-8">
                        @Html.AntiForgeryToken()
                        <table width="100%" cellpadding="3" cellspacing="0">
                            <tr>
                                <td width="70%">
                                </td>
                                <td style="font-weight: bold;">
                                </td>
                            </tr>
                        </table>
                    </div>

                    <div class="col-lg-4">
                        <div class="row">
                            <input type="submit" id="Btn_Display" class="FilterButton" value="Display" />
                            <input type="button" class="FilterButton" id="btn_AddProducts" value="Add New Product">
                            @*<input type="button" class="FilterButton" id="btn_DeleteProducts" value="Delete">*@
                        </div>
                    </div>

                </div>
            </form>
        </div>
    </section>
    <section id="List_Section">
        <div class="container-fluid px-0">
            <div class="row about-extra">
                <div class="col-lg-12 wow fadeInUp">
                    <ejs-grid id="ProductsGrid" allowSelection="true" gridLines="Both" enableHover="true" allowPaging="true" allowGrouping="true" allowSorting="true"
                              dataBound="ProductsGridBound" load="RenderComplete"
                              enableAltRow="true" dataSource="@Model">
                        <e-grid-pageSettings pageSize="25" pageCount="3"></e-grid-pageSettings>
                        <e-grid-selectionsettings type="Multiple" checkboxOnly="true"></e-grid-selectionsettings>
                        <e-grid-groupsettings showDropArea="false" columns="@(new string[]{"ProductType"})"> </e-grid-groupsettings>
                        <e-grid-columns>
                            <e-grid-column field="ProductName" headerText="Product" width="180" allowGrouping="false"></e-grid-column>
                            <e-grid-column field="description" headerText="Description" width="180" allowGrouping="false" allowSorting="false"></e-grid-column>
                            <e-grid-column field="category" headerText="Category" width="100" allowGrouping="true"></e-grid-column>
                            <e-grid-column field="price" headerText="Price" width="40" allowGrouping="true"></e-grid-column>
                            <e-grid-column field="quantity" headerText="Quantity" width="40" allowGrouping="true"></e-grid-column>
                            <e-grid-column field="id" template="#EditProducts" isPrimaryKey="true" headerText="" width="80"></e-grid-column>
                        </e-grid-columns>
                    </ejs-grid>
                </div>
            </div>
        </div>
    </section>

</section>
<section id="GridTemplates">
    <script type="text/x-template" id="EditProducts">
        <a onclick='UpdateProductsDetails(${ id })'>
            <i class="fas fa-edit" aria-hidden="true"></i>
        </a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        <a onclick='DeleteProduct(${ id })'>
            <i class="fas fa-trash" aria-hidden="true"></i>
        </a>
    </script>
</section>
<section id="PopupContent">
    <!-- Full Height Modal Right -->
    <div class="modal fade" id="ProductsDetailsModal" tabindex="-1" role="dialog" aria-labelledby="ModalHeaderLabel"
         aria-hidden="true">

        <div class="modal-dialog" role="document">
            <!--Content-->
            <div id="ProductsDetailsModalContent" class="modal-content">

            </div>
            <!--/.Content-->
        </div>
    </div>
    <!-- Full Height Modal Right -->
</section>
<script type="text/javascript">
    var ID = 0;
    function OnSuccess(a) {
        HideLoading();
        var ProductsGrid = document.getElementById('ProductsGrid').ej2_instances[0];
        ProductsGrid.dataSource = a;
    }

    var initialLoad = true;
    function ProductsGridBound(args) {
        this.isStringTemplate = true;
        if (initialLoad) {
            initialLoad = true;
            var pager = document.getElementsByClassName('e-gridpager');
            var topElement;
            if (this.toolbar) {
                topElement = document.getElementsByClassName('e-toolbar');
            } else {
                topElement = document.getElementsByClassName('e-gridheader');
            }
            topElement[0].before(pager[0]);
        }
    }

    $(function () {
        $("#Btn_Display").click(ValidateParams);

        $("#btn_AddProducts").click(AddNewProducts);

    });

    ValidateParams = function () {
        ShowLoading();
    }
    RenderComplete = function () {
        console.log("Rendered");
    }

    UpdateProductsDetails = function (d) {

        var EditContainerURL="@Url.Action("ProductDetails", "Products", new { Area = "Setup" })";
         EditContainerURL += "/" + d;
        ShowLoading("Processing.. Please wait!!");
        $.get(EditContainerURL, function (data) {
            $("#ProductsDetailsModalContent").html(data);
            $("#ProductsModalHeader").html("Modify Product");
            HideLoading();
            ShowPopupModal("ProductsDetailsModal");
        });
    }
    DeleteProduct = function (d) {
        AsyncConfirmYesNo("Confirmation", "Are you sure,Do you want to delete the Product?", "ConfirmDeleteProductYes", "ConfirmDeleteProductNo");
        ID = d;
    }
    ConfirmDeleteProductYes = function () {
         var EditContainerURL = "@Url.Action("DeleteProduct", "Products")";
            EditContainerURL += "/" + ID;
            ShowLoading("Processing.. Please wait!!");
            $.get(EditContainerURL, function (data) {
                OnSuccessSave(data);
                HideLoading();
            });
    }
    ConfirmDeleteProductNo = function () {
        return false;
    }

    AddNewProducts = function () {
        var EditContainerURL = "@Url.Action("ProductDetails", "Products", new { Area = "Setup" })";

        ShowLoading("Processing.. Please wait!!");

        $.get(EditContainerURL, function (data) {
            $("#ProductsDetailsModalContent").html(data);
            $("#ProductsModalHeader").html("Add New Product");
            HideLoading();
            ShowPopupModal("ProductsDetailsModal");
        });
    }
    function OnSuccessSave(a) {
        HideLoading();
        HidePopupModal('ProductsDetailsModal');
        var ProductsGrid = document.getElementById('ProductsGrid').ej2_instances[0];
        ProductsGrid.dataSource = a.Dynamicdata;
        alert(a.message);
    }
</script>










